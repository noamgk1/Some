<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search in Page</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 10px;
            width: 250px;
        }
        input {
            width: 100%;
            padding: 5px;
            margin-bottom: 10px;
        }
        button {
            width: 100%;
            margin: 5px 0;
        }
        #results {
            margin-top: 10px;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <input type="text" id="searchWord" placeholder="הכנס מילה לחיפוש" />
    <button id="searchButton">חפש</button>
    <button id="prevButton" disabled>למעלה</button>
    <button id="nextButton" disabled>למטה</button>
    <div id="results"></div>
    <script src="popup.js"></script>
</body>
</html>




let currentIndex = -1;
let totalMatches = 0;

const searchInput = document.getElementById('searchWord');
const searchButton = document.getElementById('searchButton');
const prevButton = document.getElementById('prevButton');
const nextButton = document.getElementById('nextButton');
const resultsDiv = document.getElementById('results');

// חיפוש מילה
searchButton.addEventListener('click', () => {
    const searchWord = searchInput.value.trim();
    if (!searchWord) return;

    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
        chrome.tabs.sendMessage(
            tabs[0].id,
            { action: 'searchWord', word: searchWord },
            (response) => {
                if (response) {
                    totalMatches = response.total;
                    currentIndex = response.currentIndex;
                    updateResults();
                }
            }
        );
    });
});

// מעבר לתוצאה הבאה
nextButton.addEventListener('click', () => {
    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
        chrome.tabs.sendMessage(
            tabs[0].id,
            { action: 'nextResult' },
            (response) => {
                if (response) {
                    currentIndex = response.currentIndex;
                    updateResults();
                }
            }
        );
    });
});

// מעבר לתוצאה הקודמת
prevButton.addEventListener('click', () => {
    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
        chrome.tabs.sendMessage(
            tabs[0].id,
            { action: 'prevResult' },
            (response) => {
                if (response) {
                    currentIndex = response.currentIndex;
                    updateResults();
                }
            }
        );
    });
});

// עדכון תצוגת התוצאות
function updateResults() {
    resultsDiv.textContent =
        totalMatches > 0
            ? `תוצאה ${currentIndex + 1} מתוך ${totalMatches}`
            : 'לא נמצאו תוצאות';
    prevButton.disabled = currentIndex <= 0;
    nextButton.disabled = currentIndex >= totalMatches - 1;
}




let matches = [];
let currentIndex = -1;

// הסרת הדגשות קיימות
function clearHighlights() {
    const highlighted = document.querySelectorAll('.highlight');
    highlighted.forEach((el) => {
        el.classList.remove('highlight');
    });
}

// חיפוש מילה בדף
function searchWord(word) {
    clearHighlights();
    matches = [];
    currentIndex = -1;

    const regex = new RegExp(`\\b${word}\\b`, 'gi');
    const walker = document.createTreeWalker(document.body, NodeFilter.SHOW_TEXT, null, false);

    while (walker.nextNode()) {
        const node = walker.currentNode;
        const text = node.nodeValue;
        const match = regex.exec(text);

        if (match) {
            const span = document.createElement('span');
            span.className = 'highlight';
            span.textContent = match[0];

            const split = text.split(regex);
            node.nodeValue = split[0];
            node.parentNode.insertBefore(span, node.nextSibling);
            node.parentNode.insertBefore(document.createTextNode(split[1] || ''), span.nextSibling);

            matches.push(span);
        }
    }

    if (matches.length > 0) {
        currentIndex = 0;
        scrollToMatch();
    }

    return { total: matches.length, currentIndex };
}

// מעבר לתוצאה הבאה
function nextResult() {
    if (currentIndex < matches.length - 1) {
        currentIndex++;
        scrollToMatch();
    }
    return { currentIndex };
}

// מעבר לתוצאה הקודמת
function prevResult() {
    if (currentIndex > 0) {
        currentIndex--;
        scrollToMatch();
    }
    return { currentIndex };
}

// גלילה אל התוצאה הנוכחית
function scrollToMatch() {
    if (matches[currentIndex]) {
        matches[currentIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
}

// האזנה להודעות מ-Popup
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.action === 'searchWord') {
        sendResponse(searchWord(message.word));
    } else if (message.action === 'nextResult') {
        sendResponse(nextResult());
    } else if (message.action === 'prevResult') {
        sendResponse(prevResult());
    }
});


{
    "manifest_version": 3,
    "name": "Search in Page",
    "version": "1.0",
    "description": "חיפוש מילה בדף כשלם בלבד",
    "permissions": ["activeTab"],
    "action": {
        "default_popup": "popup.html",
        "default_icon": "icon.png"
    },
    "content_scripts": [
        {
            "matches": ["<all_urls>"],
            "js": ["content.js"]
        }
    ]
}


