#!/usr/bin/env python3
"""
CSV Merger Script

This script takes two CSV file paths as command-line arguments,
verifies their existence, checks if they have the same columns,
merges them, and saves the combined result in the current directory.
"""

import os
import sys
import pandas as pd
import argparse
from pathlib import Path


def validate_file_exists(file_path):
    """
    Validates if the specified file exists.
    
    Args:
        file_path (str): Path to the file to validate
        
    Returns:
        bool: True if file exists, otherwise raises FileNotFoundError
    """
    if not os.path.isfile(file_path):
        raise FileNotFoundError(f"File not found: {file_path}")
    return True


def check_columns_match(df1, df2):
    """
    Checks if two dataframes have the same columns.
    
    Args:
        df1 (pandas.DataFrame): First dataframe
        df2 (pandas.DataFrame): Second dataframe
        
    Returns:
        bool: True if columns match, otherwise raises ValueError
    """
    if sorted(df1.columns.tolist()) != sorted(df2.columns.tolist()):
        raise ValueError("The CSV files have different columns")
    return True


def merge_csv_files(file1_path, file2_path):
    """
    Merges two CSV files into one.
    
    Args:
        file1_path (str): Path to the first CSV file
        file2_path (str): Path to the second CSV file
        
    Returns:
        pandas.DataFrame: Merged dataframe
    """
    # Validate files exist
    validate_file_exists(file1_path)
    validate_file_exists(file2_path)
    
    # Read the CSV files
    df1 = pd.read_csv(file1_path)
    df2 = pd.read_csv(file2_path)
    
    # Check if columns match
    check_columns_match(df1, df2)
    
    # Concatenate the dataframes
    merged_df = pd.concat([df1, df2], ignore_index=True)
    
    return merged_df


def main():
    """
    Main function to process command-line arguments and execute the CSV merging.
    """
    parser = argparse.ArgumentParser(description='Merge two CSV files with identical columns.')
    parser.add_argument('file1', help='Path to the first CSV file')
    parser.add_argument('file2', help='Path to the second CSV file')
    parser.add_argument('-o', '--output', help='Output filename (default: merged_output.csv)', 
                       default='merged_output.csv')
    
    args = parser.parse_args()
    
    try:
        # Merge the CSV files
        merged_df = merge_csv_files(args.file1, args.file2)
        
        # Save the merged dataframe to the current directory
        output_path = Path(args.output)
        merged_df.to_csv(output_path, index=False)
        
        print(f"Successfully merged CSV files. Output saved to: {output_path.absolute()}")
        
    except Exception as e:
        print(f"Error: {e}", file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
